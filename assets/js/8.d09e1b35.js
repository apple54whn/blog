(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{123:function(t,s,a){t.exports=a.p+"assets/img/xingcanshican.4d1e2d02.png"},151:function(t,s,a){"use strict";a.r(s);var n=a(0),r=Object(n.a)({},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"java-基础"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#java-基础","aria-hidden":"true"}},[t._v("#")]),t._v(" Java 基础")]),t._v(" "),n("h2",{attrs:{id:"面向对象的三大特性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#面向对象的三大特性","aria-hidden":"true"}},[t._v("#")]),t._v(" 面向对象的三大特性")]),t._v(" "),n("ul",[n("li",[n("p",[n("strong",[t._v("封装")]),t._v("：是指将"),n("strong",[t._v("类的实现细节隐藏")]),t._v("起来，然后通过"),n("strong",[t._v("公共的方法暴露")]),t._v("出该类的功能。")])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("继承")]),t._v("：继承是面向对象实现"),n("strong",[t._v("软件复用")]),t._v("的重要手段，是使用已存在的类作为基础建立新类的技术。")]),t._v(" "),n("p",[t._v("但是继承是强耦合且破坏了封装性。")])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("多态")]),t._v("："),n("strong",[t._v("父类引用指向子类对象，通过该引用调用时存在编译期不确定性，运行期确定。")])]),t._v(" "),n("blockquote",[n("p",[t._v("方法重载（@overload）实现编译时多态性；方法重写（@override）实现运行时多态性。")])]),t._v(" "),n("p",[t._v("实现运行时多态前提："),n("strong",[t._v("继承或实现")]),t._v("；"),n("strong",[t._v("方法的重写")]),t._v("（不重写无意义）；"),n("strong",[t._v("父类引用指向子类对象")]),t._v("（即向上转型）。")])]),t._v(" "),n("li",[n("p",[t._v("抽象：将一类事物抽取我们所关注的"),n("strong",[t._v("属性和行为")]),t._v("，形成新的事物的思维过程。")])])]),t._v(" "),n("div",{staticClass:"tip custom-block"},[n("p",[t._v("This is a tip")])]),t._v(" "),n("div",{staticClass:"warning custom-block"},[n("p",[t._v("This is a warning")])]),t._v(" "),n("div",{staticClass:"danger custom-block"},[n("p",{staticClass:"custom-block-title"},[t._v("STOP")]),t._v(" "),n("p",[t._v("This is a dangerous warning")])]),t._v(" "),n("h2",{attrs:{id:"jre-和-jdk-跨平台"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#jre-和-jdk-跨平台","aria-hidden":"true"}},[t._v("#")]),t._v(" JRE 和 JDK & 跨平台")]),t._v(" "),n("ul",[n("li",[t._v("JRE(Java Runtime Environment)：是Java程序的运行时环境，包含 "),n("strong",[t._v("JVM")]),t._v(" 和运行时所需要的"),n("strong",[t._v("核心类库")]),t._v(" 。")]),t._v(" "),n("li",[t._v("JDK (Java Development Kit)：是Java程序开发工具包，包含 "),n("strong",[t._v("JRE")]),t._v(" 和"),n("strong",[t._v("开发人员使用的工具")]),t._v("。")]),t._v(" "),n("li",[t._v("通过不同操作系统上的JVM来"),n("strong",[t._v("屏蔽不同操作系统间指令集的不同")]),t._v("。")])]),t._v(" "),n("h2",{attrs:{id:"和-区别"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#和-区别","aria-hidden":"true"}},[t._v("#")]),t._v(" & 和 && 区别")]),t._v(" "),n("ul",[n("li",[t._v("都可以作为"),n("strong",[t._v("逻辑与运算符")]),t._v("，运算符两边都为 true 时结果才为 true；")]),t._v(" "),n("li",[t._v("&& 还有"),n("strong",[t._v("短路功能")]),t._v("，运算符左边为 false ，则不再计算右边的值；& 则需要都计算")]),t._v(" "),n("li",[n("strong",[t._v("& 可以做位运算符")]),t._v("，& 两边表达式不是布尔类型时表示按位与。整数与0x0F按位与表示取最低4位")])]),t._v(" "),n("h2",{attrs:{id:"char-类型变量能否存储一个中文汉字？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#char-类型变量能否存储一个中文汉字？","aria-hidden":"true"}},[t._v("#")]),t._v(" char 类型变量能否存储一个中文汉字？")]),t._v(" "),n("p",[t._v("char型变量是用来存储Unicode编码的字符的，读取到JVM中时会将字符编码转为UTF-16来存储，占两个字节，可以存储大部分非生僻字。（UTF-8位不定长，3个字节存储中文汉字。）")]),t._v(" "),n("h2",{attrs:{id:"boolean-占几个字节？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#boolean-占几个字节？","aria-hidden":"true"}},[t._v("#")]),t._v(" boolean 占几个字节？")]),t._v(" "),n("p",[t._v("在《Java虚拟机规范》给出了4个字节（编译后用int替代），和boolean数组1个字节的定义（当byte数组处理）")]),t._v(" "),n("h2",{attrs:{id:"基本类型和包装类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#基本类型和包装类型","aria-hidden":"true"}},[t._v("#")]),t._v(" 基本类型和包装类型")]),t._v(" "),n("ul",[n("li",[t._v("基本类型存储在栈中，初始值如int为0，boolean为false")]),t._v(" "),n("li",[t._v("包装类型存储在堆中，初始值为null（可以区分未赋值与0区别）")])]),t._v(" "),n("h2",{attrs:{id:"装箱与拆箱"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#装箱与拆箱","aria-hidden":"true"}},[t._v("#")]),t._v(" 装箱与拆箱")]),t._v(" "),n("ul",[n("li",[t._v("装箱：将基本数据类型的值转为引用数据类型。方法有如"),n("code",[t._v("Integer.valueOf(int num/String str)")])]),t._v(" "),n("li",[t._v("拆箱：将引用数据类型的值转为基本数据类型。方法有如"),n("code",[t._v(".intValue()")])])]),t._v(" "),n("p",[n("strong",[t._v("基本类型的包装类（除浮点数）都有其缓存，Boolean为"),n("code",[t._v("true、false")]),t._v("，Character为"),n("code",[t._v("0~127")]),t._v("，其他为"),n("code",[t._v("-128~127")])])]),t._v(" "),n("blockquote",[n("p",[t._v("包装类都重写Object类中的"),n("code",[t._v("toString()")]),t._v(" 方法，以"),n("strong",[t._v("字符串")]),t._v("形式返回包装类的基本数据类型的值")]),t._v(" "),n("p",[t._v("除了Character外，包装类都有"),n("code",[t._v("valueOf(String s)")]),t._v("方法，根据String类型参数创建包装类对象")]),t._v(" "),n("p",[t._v("除了Character外，包装类都有"),n("code",[t._v("parseXXX(String s)")]),t._v("的静态方法，将字符串转为基本类型数据")])]),t._v(" "),n("h2",{attrs:{id:"数字类型循环问题"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#数字类型循环问题","aria-hidden":"true"}},[t._v("#")]),t._v(" 数字类型循环问题")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("A")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MAX_VALUE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("B")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("A")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" count "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("B")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("A")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        count"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("count"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("若是i<A，则循环一次即可，输出1；")]),t._v(" "),n("p",[t._v("若是i<=A，就不是2次那么简单了。第二次i与A相等，执行count++后继续执行i++，此时i超出Integer最大值，变为Integer的最小值-2147483648，继续循环下去了。。。")]),t._v(" "),n("h2",{attrs:{id:"取余取模"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#取余取模","aria-hidden":"true"}},[t._v("#")]),t._v(" 取余取模")]),t._v(" "),n("p",[t._v("C、C++、java、JavaScript中%是取余，Python中%是取模，只对于整数有意义")]),t._v(" "),n("p",[t._v("==区别在于第一步的商"),n("strong",[t._v("趋于0(取余)")]),t._v("、"),n("strong",[t._v("趋于负无穷(取模)")]),t._v("，"),n("strong",[t._v("取余和取模同符号数结果相同")]),t._v("==")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[t._v("取余"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("结果符号取决于被除数"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t\t\t取模"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("结果符号取决于模数"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("；\t\t\t\t\t \t\t\t"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("；\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t\t\t\t\t "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("；\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t\t\t\t\t\t "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("；\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t\t\t\t\t "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("；\n")])])]),n("h2",{attrs:{id:"成员变量和局部变量的区别"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#成员变量和局部变量的区别","aria-hidden":"true"}},[t._v("#")]),t._v(" 成员变量和局部变量的区别")]),t._v(" "),n("ul",[n("li",[t._v("成员变量属于"),n("strong",[t._v("类或实例")]),t._v("（可以被访问权限修饰符、static、final等修饰）；局部变量属于"),n("strong",[t._v("方法")]),t._v("（最多只能被final修饰）")]),t._v(" "),n("li",[t._v("成员变量在"),n("strong",[t._v("堆")]),t._v("内存中；局部变量在"),n("strong",[t._v("栈")]),t._v("内存中")]),t._v(" "),n("li",[t._v("成员变量"),n("strong",[t._v("有默认初始值")]),t._v("；局部变量没有默认初始值；")])]),t._v(" "),n("h2",{attrs:{id:"equals"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#equals","aria-hidden":"true"}},[t._v("#")]),t._v(" == & equals")]),t._v(" "),n("ul",[n("li",[n("p",[n("code",[t._v("==")]),t._v("：都是比较变量在内存（栈）中的值。"),n("strong",[t._v("基本类型")]),t._v("：比较值是否相等；"),n("strong",[t._v("引用类型")]),t._v("：比较地址值是否相等")])]),t._v(" "),n("li",[n("p",[n("code",[t._v("equals()")]),t._v("：只能比较"),n("strong",[t._v("引用类型")]),t._v("，底层调用"),n("code",[t._v("==")]),t._v("，比较地址值是否相等。一般根据需要重写，"),n("code",[t._v("String")]),t._v("重写了。")]),t._v(" "),n("p",[t._v("一般推荐使用"),n("code",[t._v("Objects.equals(String a, String b)")]),t._v("来代替。其底层"),n("code",[t._v("(a == b) || (a != null && a.equals(b))")])])])]),t._v(" "),n("h2",{attrs:{id:"作用域-private，protected，public以及不写时的区别"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#作用域-private，protected，public以及不写时的区别","aria-hidden":"true"}},[t._v("#")]),t._v(" 作用域 private，protected，public以及不写时的区别")]),t._v(" "),n("ul",[n("li",[t._v("private：类访问权限")]),t._v(" "),n("li",[t._v("不写：包访问权限")]),t._v(" "),n("li",[t._v("protected：子类访问权限、包访问权限")]),t._v(" "),n("li",[t._v("public：都能被访问")])]),t._v(" "),n("p",[t._v("外部类的修饰符只能是 public 或默认；类的成员（包括内部类）的修饰符可以是以上四种")]),t._v(" "),n("p",[t._v("一个Java文件中可以有多个类，但是public修饰的只能有一个，且类名和文件名一致！")]),t._v(" "),n("h2",{attrs:{id:"overload-和-overrid-的区别"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#overload-和-overrid-的区别","aria-hidden":"true"}},[t._v("#")]),t._v(" overload 和 overrid 的区别")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("重载："),n("strong",[t._v("同一类")]),t._v("中"),n("strong",[t._v("方法名相同")]),t._v("，"),n("strong",[t._v("参数列表不同")]),t._v("(类型 或 个数 或 多类型顺序 不同)")]),t._v(" "),n("p",[t._v("与访问修饰符、返回值类型（可能只调用，不需要返回值）、参数名无关！")])]),t._v(" "),n("li",[n("p",[t._v("重写："),n("strong",[t._v("父子类")]),t._v("中，"),n("strong",[t._v("方法名")]),t._v("、"),n("strong",[t._v("参数列表必须相同")]),t._v("（不同则是特有方法）。满足以下条件为重写：")]),t._v(" "),n("ul",[n("li",[n("p",[n("strong",[t._v("访问权限")]),t._v("必须大于等于父类权限")])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("返回值类型")]),t._v("，对象类型必须小于等于父类（如Object、String）；基本类型必须一致！")])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("抛出的异常类型")]),t._v("小于等于父类方法的异常类型")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Father")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("show")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IOException")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//重写中，子类方法抛出异常类型必须小于等于父类方法")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//下面哪些方法可以出现在Father的子类中？")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("short")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("show")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//参数列表都不同了，是子类特有方法")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("show")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//可以，方法重写")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("show")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//不可以，权限小")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("short")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("show")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//不可以，返回类型为基本类型必须一致！")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("show")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//不可以，条件都满足，但是静态方法只能覆盖静态方法！！！")]),t._v("\n")])])]),n("p",[t._v("若父类中有"),n("strong",[t._v("私有方法、静态方法")]),t._v("，因为和"),n("strong",[t._v("类相关")]),t._v("，子类也可以存在完全一样的方法，"),n("strong",[t._v("不是重写")]),t._v("！")])])])])]),t._v(" "),n("h2",{attrs:{id:"抽象类和接口的区别"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#抽象类和接口的区别","aria-hidden":"true"}},[t._v("#")]),t._v(" 抽象类和接口的区别")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("接口中"),n("strong",[t._v("没有成员变量")]),t._v("，"),n("strong",[t._v("常量是静态其赋值")]),t._v("的，默认修饰符"),n("code",[t._v("[public static final]")]),t._v("；而抽象类都可以有")])]),t._v(" "),n("li",[n("p",[t._v("接口"),n("strong",[t._v("没有静态代码块、构造代码块、构造方法")]),t._v("（其实现类继承"),n("code",[t._v("Object")]),t._v("，提供无参构造）；抽象类中都可以有")])]),t._v(" "),n("li",[n("p",[t._v("接口中"),n("strong",[t._v("抽象方法有默认修饰符")]),n("code",[t._v("[public abstract]")]),t._v("。在Java 8 后有"),n("strong",[t._v("默认方法可以实现")]),t._v("，有"),n("strong",[t._v("静态方法")]),t._v("，但只能接口名调用！")]),t._v(" "),n("p",[t._v("抽象类可以有抽象方法（用"),n("code",[t._v("abstract")]),t._v("修饰，除了不可以用"),n("code",[t._v("private")]),t._v("来权限修饰）或非抽象方法（也可以有静态方法）")]),t._v(" "),n("blockquote",[n("p",[t._v("实现类实现的多个接口中，存在"),n("strong",[t._v("重复的抽象方法")]),t._v("，那么"),n("strong",[t._v("只需重写一次")]),t._v("即可")]),t._v(" "),n("p",[t._v("实现类实现的多个接口中，存在"),n("strong",[t._v("重复的默认方法")]),t._v("，那么"),n("strong",[t._v("必须重写")]),t._v("冲突的默认方法")]),t._v(" "),n("p",[t._v("实现类的"),n("strong",[t._v("直接父类中的方法")]),t._v("和"),n("strong",[t._v("接口中默认方法产生冲突")]),t._v("，则优先"),n("strong",[t._v("使用父类")]),t._v("中的方法")])])]),t._v(" "),n("li",[n("p",[t._v("一个类可以"),n("strong",[t._v("实现多个接口（接口之间可以多继承）")]),t._v("，但"),n("strong",[t._v("只能继承一个类")]),t._v("（包括抽象类）")])]),t._v(" "),n("li",[n("p",[t._v("一个类实现接口"),n("strong",[t._v("必须实现除默认方法、静态方法外的所有抽象方法")]),t._v("，除非它是抽象类；继承抽象类同此")])]),t._v(" "),n("li",[n("p",[t._v("接口是"),n("strong",[t._v("自上而下")]),t._v("，定义"),n("strong",[t._v("通信规范")]),t._v("；抽象类是"),n("strong",[t._v("自底而上")]),t._v("的设计，在子类中重复出现的工作，"),n("strong",[t._v("抽象")]),t._v("到抽象类中")])])]),t._v(" "),n("p",[t._v("接口和抽象类的选择")]),t._v(" "),n("ul",[n("li",[t._v("如果要创建不带任何方法定义和成员变量的基类，那么就应该选择接口而不是抽象类")]),t._v(" "),n("li",[t._v("只有在必须要有方法定义和成员变量的时候，才应该选择抽象类")])]),t._v(" "),n("h2",{attrs:{id:"string、stringbuffer、stringbuilder"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#string、stringbuffer、stringbuilder","aria-hidden":"true"}},[t._v("#")]),t._v(" String、StringBuffer、StringBuilder")]),t._v(" "),n("ul",[n("li",[n("p",[n("code",[t._v("String")]),t._v("对象"),n("strong",[t._v("不可变")]),t._v("（引用可变），线程"),n("strong",[t._v("安全")]),t._v("。")]),t._v(" "),n("blockquote",[n("ul",[n("li",[n("p",[n("code",[t._v("String")]),n("strong",[t._v("类")]),t._v("及其所有"),n("strong",[t._v("属性如"),n("code",[t._v("char[]")]),t._v("（Java 9为"),n("code",[t._v("byte[]")]),t._v("）都被声明为"),n("code",[t._v("final")])]),t._v("，其"),n("strong",[t._v("值在创建后不能被更改")])])]),t._v(" "),n("li",[n("p",[t._v("由于它的不可变性，类似拼接裁剪等操作，都"),n("strong",[t._v("可能产生新的String对象")]),t._v("（取决于常量池中是否存在）对性能有影响。")]),t._v(" "),n("p",[t._v("=="),n("strong",[t._v("只有")]),t._v("通过引号"),n("strong",[t._v("直接赋值")]),t._v("的方式定义的会放入字符串常量池中==；但是"),n("code",[t._v("new String")]),t._v("方式定义的"),n("strong",[t._v("不会放入字符串常量池")])]),t._v(" "),n("p",[t._v("字符串若是=="),n("strong",[t._v("变量相加，先开空间再拼接")]),t._v("==；若是=="),n("strong",[t._v("常量先加，然后在常量池中找")]),t._v("==，==有就返回，没有就创建==。")])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("重写了"),n("code",[t._v("equals")]),t._v("和"),n("code",[t._v("hashCode")]),t._v("方法")])])])])])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("StringBuffer是同步的，数据安全，效率低；StringBuilder是不同步的，数据不安全，效率高")]),t._v("；都是可变的。")]),t._v(" "),n("blockquote",[n("ul",[n("li",[t._v("底层是维护了"),n("code",[t._v("char[]")]),t._v("（Java 9为"),n("code",[t._v("byte[]")]),t._v("），内部数组初始值为16。扩容利用了"),n("code",[t._v("Arrays.copyOf")]),t._v("底层是"),n("code",[t._v("System.arraycopy()")]),t._v("方法")]),t._v(" "),n("li",[t._v("但是这俩都"),n("strong",[t._v("没有重写"),n("code",[t._v("equals")]),t._v("和"),n("code",[t._v("hashCode")]),t._v("方法")]),t._v("。作为元素放入Hash类集合中时会出现问题")]),t._v(" "),n("li",[n("code",[t._v("StringBuilder")]),t._v("与"),n("code",[t._v("StringBuffer")]),t._v("有公共父类"),n("code",[t._v("AbstractStringBuilder")]),t._v("。")])])])])]),t._v(" "),n("ul",[n("li",[n("p",[t._v("下述两种方法分别创建了几个 Sring 对象？")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 第一种：直接赋一个字面量")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" str1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ABCD"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 第二种：通过构造器创建")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" str2 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ABCD"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("ul",[n("li",[n("p",[t._v("第一个：最多创建一个String对象，最少不创建String对象。")]),t._v(" "),n("p",[t._v("如果常量池中存在"),n("code",[t._v("ABCD")]),t._v("，那么str1直接引用，此时不创建String对象；否则先在常量池中创建"),n("code",[t._v("ABCD")]),t._v("内存空间再引用")])]),t._v(" "),n("li",[n("p",[t._v("最多创建两个String对象，至少创建一个String对象。")]),t._v(" "),n("p",[t._v("new关键字绝对会在堆空间创建一块新的内存区域，所以至少创建一个String对象")])])])])]),t._v(" "),n("h2",{attrs:{id:"stringbuilder-和"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#stringbuilder-和","aria-hidden":"true"}},[t._v("#")]),t._v(" StringBuilder 和 +")]),t._v(" "),n("p",[t._v("在JDK1.5之后，+ 的内部采用StringBuilder 实现，但是若在循环中使用+来拼接字符串，会创建多个StringBuilder 对象，GC回收不及时会占用大量资源。所以字符串拼接时（特别在循环中）最好使用StringBuilder。")]),t._v(" "),n("h2",{attrs:{id:"数组有length属性，string有length"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#数组有length属性，string有length","aria-hidden":"true"}},[t._v("#")]),t._v(" 数组有length属性，String有length()")]),t._v(" "),n("h2",{attrs:{id:"final-关键字"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#final-关键字","aria-hidden":"true"}},[t._v("#")]),t._v(" final 关键字")]),t._v(" "),n("p",[n("strong",[t._v("ﬁnal")]),t._v("：用于"),n("strong",[t._v("修饰不可改变内容")]),t._v("。可以用于修饰类、变量和方法。")]),t._v(" "),n("ul",[n("li",[n("p",[n("strong",[t._v("类")]),t._v("：被修饰的类，"),n("strong",[t._v("不能被继承")]),t._v("。")])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("方法")]),t._v("：被修饰的方法，"),n("strong",[t._v("不能被重写")]),t._v("。")])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("变量")]),t._v("：被修饰的变量，"),n("strong",[t._v("初始化之后不能改变")]),t._v("。")]),t._v(" "),n("ul",[n("li",[n("p",[n("strong",[t._v("成员变量")])]),t._v(" "),n("p",[t._v("由于成员变量有默认值，用final修饰后"),n("strong",[t._v("必须手动赋值")]),t._v("，否则编译失败")]),t._v(" "),n("p",[t._v("要么"),n("strong",[t._v("显示初始化")]),t._v("；要么通过"),n("strong",[t._v("静态代码块、构造代码块、构造方法赋值")]),t._v("（并删除setter）")])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("局部变量")])]),t._v(" "),n("ul",[n("li",[t._v("基本类型：只能"),n("strong",[t._v("显示初始化赋值一次")]),t._v("，"),n("strong",[t._v("不能再更改")]),t._v("。")]),t._v(" "),n("li",[t._v("引用类型：只能指向一个对象，"),n("strong",[t._v("地址不能再更改")]),t._v("。不影响内部成员变量的修改")])])])])])]),t._v(" "),n("h2",{attrs:{id:"参数传递问题"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#参数传递问题","aria-hidden":"true"}},[t._v("#")]),t._v(" 参数传递问题")]),t._v(" "),n("ul",[n("li",[t._v("基本数据类型：形式参数的改变不影响实际参数（基本类型的包装类也符合这条规则）")]),t._v(" "),n("li",[t._v("引用数据类型：形式参数中"),n("strong",[t._v("属性的改变影响")]),t._v("实际参数（若不是属性改变，则并不影响）")])]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//127也是一样")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("change")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//第二行中i是多少这里就是多少")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("change")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("【下题重点】在于"),n("strong",[t._v("String内容不可变")]),t._v("并且变量相加需要开空间再拼接，StringBuilder等内容可以变")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[t._v("  "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" s1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" s2 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"world"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"---"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("s2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//hello---world")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("change")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("s2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"---"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("s2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//hello---world")]),t._v("\n  \n  "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringBuffer")]),t._v(" sb1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringBuffer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringBuffer")]),t._v(" sb2 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringBuffer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"world"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sb1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"---"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("sb2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//hello---world")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("change")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sb1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("sb2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sb1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"---"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("sb2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//hello---worldworld")]),t._v("\n  \n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("change")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" s1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" s2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  \ts1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" s2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  \ts2 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" s1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("s2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("change")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringBuffer")]),t._v(" sb1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringBuffer")]),t._v(" sb2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  \tsb1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sb2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  \tsb2 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sb1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("append")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sb2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[n("img",{attrs:{src:a(123),alt:""}})]),t._v(" "),n("p",[t._v("​")]),t._v(" "),n("h2",{attrs:{id:"数据类型转换"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#数据类型转换","aria-hidden":"true"}},[t._v("#")]),t._v(" 数据类型转换")]),t._v(" "),n("ul",[n("li",[n("p",[n("strong",[t._v("自动类型转换")]),t._v("(隐式)，范围"),n("strong",[t._v("小")]),t._v("的类型向范围"),n("strong",[t._v("大")]),t._v("的"),n("strong",[t._v("类型提升")]),t._v("，如下：")]),t._v(" "),n("p",[t._v("=="),n("strong",[t._v("参与运算时byte，short，char")]),t._v("——>"),n("strong",[t._v("int")]),t._v("——>"),n("strong",[t._v("long")]),t._v("——>"),n("strong",[t._v("float")]),t._v("——>"),n("strong",[t._v("double")]),t._v("(boolean不参与)==")]),t._v(" "),n("p",[t._v("=="),n("strong",[t._v("编译器的常量优化")]),t._v("==")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//对于byte、short、char三种类型来说，若右侧赋值的数值(不能为变量)没有超过范围，")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),t._v(" b "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//javac编译器会自动隐含得帮我们补上(byte) (short) (char) ，否则编译报错")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),t._v(" c "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//运算期间byte类型变量自动提升为int，但int类型不能赋值给byte类型，因此编译失败。")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),t._v(" d "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//常量在编译的时候（javac），已经确定了 3+4 的结果并没有超过byte类型的取值范围，可以赋值给d，成功")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" ch "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'A'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ch "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//66")]),t._v("\n")])])])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("强制类型转换")]),t._v("(显式)。一般不推荐使用，有可能发生"),n("strong",[t._v("精度损失")]),t._v("(浮点转成整数，直接取消小数)，"),n("strong",[t._v("数据溢出")])]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),t._v(" b "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("=="),n("strong",[t._v("在使用+=、-=、*=、/=、%=运算符进行赋值时，强制类型转换会自动完成")]),t._v("==")])])]),t._v(" "),n("h2",{attrs:{id:"取余取模-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#取余取模-2","aria-hidden":"true"}},[t._v("#")]),t._v(" 取余取模")]),t._v(" "),n("p",[t._v("（C、C++、java、JavaScript中%是取余，Python中%是取模），只对于整数有意义")]),t._v(" "),n("p",[t._v("==区别在于第一步的商"),n("strong",[t._v("趋于0(取余)")]),t._v("、"),n("strong",[t._v("趋于负无穷(取模)")]),t._v("，"),n("strong",[t._v("取余和取模同符号数结果相同")]),t._v("==")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[t._v("取余"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("结果符号取决于被除数"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t\t\t取模"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("结果符号取决于模数"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("；\t\t\t\t\t \t\t\t"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("；\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t\t\t\t\t "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("；\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t\t\t\t\t\t "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("；\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t\t\t\t\t "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("；\n")])])]),n("h2",{attrs:{id:"i-i"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#i-i","aria-hidden":"true"}},[t._v("#")]),t._v(" ++i & i++")]),t._v(" "),n("p",[t._v("实际上，不管是前置 ++，还是后置 ++，都是先将变量的值加 1，然后才继续计算的。二者之间真正的区别是：")]),t._v(" "),n("ul",[n("li",[t._v("前置 ++ 是将变量的值加 1 后，使用增值后的变量进行运算的")]),t._v(" "),n("li",[t._v("后置 ++ 是首先将变量赋值给一个临时变量，接下来对原有变量的值加 1，然后使用那个临时变量进行运算。")])]),t._v(" "),n("p",[t._v("都不是原子操作！！！")]),t._v(" "),n("h2",{attrs:{id:"for-循环问题"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#for-循环问题","aria-hidden":"true"}},[t._v("#")]),t._v(" for 循环问题")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" j "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    j "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" j"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//0")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//j+=1; //100")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//j++; //100")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("h2",{attrs:{id:"bigdecimal使用-值扩大为整数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#bigdecimal使用-值扩大为整数","aria-hidden":"true"}},[t._v("#")]),t._v(" BigDecimal使用&值扩大为整数")]),t._v(" "),n("ul",[n("li",[t._v("尽量使用参数类型为"),n("strong",[t._v("String")]),t._v("的构造函数。")]),t._v(" "),n("li",[t._v("BigDecimal都是不可变的（immutable）的，在进行每一步运算时，都会产生一个新的对象，所以在做加减乘除运算时千万要"),n("strong",[t._v("保存操作后的值")]),t._v("。")])]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BigDecimal")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BigDecimal")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Double")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("200000.8")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BigDecimal")]),t._v(" b "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BigDecimal")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Double")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("170000.7")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BigDecimal")]),t._v(" c "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("subtract")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//减法")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("或将"),n("strong",[t._v("值扩大为整数后再做加减")]),t._v("。")]),t._v(" "),n("h2",{attrs:{id:"交换变量的三种方式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#交换变量的三种方式","aria-hidden":"true"}},[t._v("#")]),t._v(" 交换变量的三种方式")]),t._v(" "),n("ol",[n("li",[n("p",[t._v("第三个变量")])]),t._v(" "),n("li",[n("p",[t._v("相加（不推荐，数值大的时候可能会溢出）")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" b "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\na "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nb "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\na "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),n("li",[n("p",[t._v("异或")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" b "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\na "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v(" b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nb "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v(" b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\na "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v(" b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])]),t._v(" "),n("h2",{attrs:{id:"object类的常见方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#object类的常见方法","aria-hidden":"true"}},[t._v("#")]),t._v(" Object类的常见方法")]),t._v(" "),n("ol",[n("li",[n("p",[t._v("**"),n("code",[t._v("toString()")]),t._v("**返回对象的字符串表示。直接打印输出一个对象名称，默认调用该方法")]),t._v(" "),n("ul",[n("li",[n("p",[n("strong",[t._v("默认打印的地址值")]),t._v("是由类的全名+'@'+哈希值的十六进制表示，没意义所以一般由"),n("strong",[t._v("子类重写")])]),t._v(" "),n("p",[n("code",[t._v('getClass().getName()+"@"toHexString(hashCode());')])])])])]),t._v(" "),n("li",[n("p",[n("strong",[n("code",[t._v("equals()")]),n("strong",[t._v("比较两个对象是否相同，底层用的是")]),n("code",[t._v("==")])]),t._v("。"),n("code",[t._v("String")]),t._v("重写了该方法")]),t._v(" "),n("ul",[n("li",[n("strong",[t._v("默认")]),t._v("情况下"),n("strong",[t._v("比较的是对象地址值")]),t._v("是否相同，没意义所以一般由"),n("strong",[t._v("子类重写")]),t._v("，注意多态向下转型问题\n"),n("ul",[n("li",[t._v("与自身比较；")]),t._v(" "),n("li",[t._v("null或不属同一类；")]),t._v(" "),n("li",[t._v("向下转型比较（基本类型用==，引用类型用**"),n("code",[t._v("Objects.equals()")]),t._v("**）")])])])])]),t._v(" "),n("li",[n("p",[n("strong",[n("code",[t._v("hashCode()")]),n("strong",[t._v("返回")]),t._v("对象的哈希值")]),t._v("，十进制整数，不是实际地址值，是"),n("strong",[t._v("逻辑地址值")])]),t._v(" "),n("ul",[n("li",[t._v("使用"),n("strong",[t._v("Set、Map中键")]),t._v("时需要"),n("strong",[t._v("给添加的自定义类重写")]),n("code",[t._v("hashCode()")]),t._v("和"),n("code",[t._v("equals()")])])])]),t._v(" "),n("li",[n("p",[n("code",[t._v("getClass()")]),t._v("返回对象的字节码文件对象，反射中讲解")])]),t._v(" "),n("li",[n("p",[n("code",[t._v("finalize()")]),n("strong",[t._v("垃圾回收")]),t._v("，不确定时间，可以调用"),n("code",[t._v("System.gc()")]),t._v("立即回收")])]),t._v(" "),n("li",[n("p",[n("code",[t._v("clone()")]),t._v("实现对象"),n("strong",[t._v("克隆")]),t._v("，包括成员变量的数据复制，但是它和两个引用指向同一个对象是有区别的")])]),t._v(" "),n("li",[n("p",[n("code",[t._v("notify()")]),t._v("native方法，并且不能重写。唤醒一个在此对象监视器上等待的线程(监视器相当于就是锁的概念)。如果有多个线程在等待只会任意唤醒一个。")])]),t._v(" "),n("li",[n("p",[n("code",[t._v("notifyAll()")]),t._v("native方法，并且不能重写。跟notify一样，唯一的区别就是会唤醒在此对象监视器上等待的所有线程，而不是一个线程。")])]),t._v(" "),n("li",[n("p",[n("code",[t._v("wait(long timeout) throws InterruptedException")]),t._v("native方法，并且不能重写。暂停线程的执行。注意：sleep方法没有释放锁，而wait方法释放了锁 。timeout是等待时间。")])]),t._v(" "),n("li",[n("p",[n("code",[t._v("wait(long timeout, int nanos) throws InterruptedException")]),t._v("多了nanos参数，这个参数表示额外时间（以毫微秒为单位，范围是 0-999999）。 所以超时的时间还需要加上nanos毫秒。")])]),t._v(" "),n("li",[n("p",[n("code",[t._v("wait() throws InterruptedException")]),t._v("跟之前的2个wait方法一样，只不过该方法一直等待，没有超时时间这个概念")]),t._v(" "),n("p",[t._v("​")])])]),t._v(" "),n("h2",{attrs:{id:"浅克隆与深克隆"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#浅克隆与深克隆","aria-hidden":"true"}},[t._v("#")]),t._v(" 浅克隆与深克隆")]),t._v(" "),n("ul",[n("li",[t._v("浅克隆：对于被克隆对象中的"),n("strong",[t._v("引用类型")]),t._v("，"),n("strong",[t._v("只复制其地址值")]),t._v("。实现Cloneable 接口，重写clone方法，修改访问修饰符为public")]),t._v(" "),n("li",[t._v("深克隆："),n("strong",[t._v("复制被克隆对象的所有类型成员变量")]),t._v("。实现Serializable接口，通过对象的序列化和反序列化实现克隆")])]),t._v(" "),n("h2",{attrs:{id:"一个对象的实例化过程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#一个对象的实例化过程","aria-hidden":"true"}},[t._v("#")]),t._v(" 一个对象的实例化过程")]),t._v(" "),n("ol",[n("li",[n("p",[t._v("JVM加载"),n("code",[t._v("main()")]),t._v("所属的类的"),n("code",[t._v(".class")]),t._v("文件，"),n("strong",[t._v("若有基类则先加载基类")]),t._v("（总是在使用时加载其"),n("code",[t._v(".class")]),t._v("文件）")]),t._v(" "),n("p",[t._v("执行"),n("strong",[t._v("根基类")]),t._v("对应"),n("code",[t._v(".class")]),t._v("中"),n("strong",[t._v("static初始化")]),t._v("（"),n("u",[t._v("静态成员变量和静态代码块，按其定义顺序执行")]),t._v(")，然后是下一个派生类的static初始化，以此类推。（类"),n("strong",[t._v("第一次")]),t._v("被"),n("strong",[t._v("加载")]),t._v("或"),n("strong",[t._v("创建")]),t._v("对象或访问静态数据成员时。只声明不能算是加载了）")])]),t._v(" "),n("li",[n("p",[t._v("在用构造器"),n("strong",[t._v("创建对象")]),t._v("时，在"),n("strong",[t._v("堆中为对象分配空间")]),t._v("，执行构造器初始化")]),t._v(" "),n("ol",[n("li",[t._v("先根据隐藏的第一行**"),n("code",[t._v("super()")]),n("strong",[t._v("来到")]),t._v("根基类**的无参构造器")]),t._v(" "),n("li",[t._v("执行根基类的"),n("strong",[t._v("非静态成员变量的默认初始化，显式初始化")]),t._v("和"),n("strong",[t._v("构造代码块的初始化")]),t._v("（"),n("u",[t._v("后俩按其定义顺序执行")]),t._v("）")]),t._v(" "),n("li",[t._v("然后执行根基类"),n("strong",[t._v("构造器定义的初始化")])]),t._v(" "),n("li",[t._v("然后执行下一个派生类的"),n("code",[t._v("super()")]),t._v("后的以上操作")])])]),t._v(" "),n("li",[n("p",[t._v("初始化完毕后，将地址"),n("strong",[t._v("赋值")]),t._v("给引用变量。")])])]),t._v(" "),n("p",[t._v("【注意】方法重写")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Father")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" j "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("method")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1 "')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Father")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2 "')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"3 "')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"4 "')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("method")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"5 "')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Son")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Father")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" j "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("method")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"6 "')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Son")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"7 "')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"8 "')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"9 "')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("method")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"10 "')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//也可以放在其他类中")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Son")]),t._v(" son1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Son")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//5 1 10 6 9 3 2 9 8 7 ")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Son")]),t._v(" son2 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Son")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//9 3 2 9 8 7 ")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h2",{attrs:{id:"异常分类"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#异常分类","aria-hidden":"true"}},[t._v("#")]),t._v(" 异常分类")]),t._v(" "),n("ul",[n("li",[t._v("Java中所有异常的根类是"),n("code",[t._v("java.lang.Throwable")]),t._v("，其下有两个子类：\n"),n("ul",[n("li",[n("p",[n("code",[t._v("java.lang.Error")]),t._v("："),n("strong",[t._v("程序无法处理的错误")]),t._v("，表示运行应用程序中较严重问题。")]),t._v(" "),n("p",[t._v("如"),n("code",[t._v("OutOfMemoryError")]),t._v("、"),n("code",[t._v("StackOverflowError")]),t._v("（递归）")])]),t._v(" "),n("li",[n("p",[n("code",[t._v("java.lang.Exception")]),t._v("："),n("strong",[t._v("程序可以处理的错误")]),t._v("，根据在编译时期还是运行时期去检查异常分为如下两类：")]),t._v(" "),n("ul",[n("li",[n("p",[n("code",[t._v("RuntimeException")]),t._v("："),n("strong",[t._v("运行时异常")])]),t._v(" "),n("p",[t._v("如"),n("code",[t._v("NullPointerException")]),t._v("，"),n("code",[t._v("ArrayIndexOutOfBoundsException")]),t._v("，"),n("code",[t._v("ArithmeticException")]),t._v("，")]),t._v(" "),n("p",[n("code",[t._v("ClassCastException")]),t._v("，"),n("code",[t._v("IllegalArgumentException")]),t._v("，"),n("code",[t._v("IllegalStateException")])])]),t._v(" "),n("li",[n("p",[t._v("除过运行时异常外的都是"),n("strong",[t._v("编译时异常")])]),t._v(" "),n("p",[t._v("如"),n("code",[t._v("IOException")]),t._v("，"),n("code",[t._v("SQLException")]),t._v("，"),n("code",[t._v("ClassNotFoundException")])])])])])])])]),t._v(" "),n("h2",{attrs:{id:"throw-和-throws-区别"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#throw-和-throws-区别","aria-hidden":"true"}},[t._v("#")]),t._v(" throw 和 throws 区别")]),t._v(" "),n("ul",[n("li",[n("p",[n("code",[t._v("throw")]),t._v("和"),n("code",[t._v("throws")]),t._v("区别")]),t._v(" "),n("ul",[n("li",[n("p",[n("code",[t._v("throw")]),t._v("：在"),n("strong",[t._v("方法体中")]),t._v("抛出一个异常对象。程序执行到此时立即停止，它后面的语句不执行。说明这里"),n("strong",[t._v("肯定有异常")]),t._v("产生。")]),t._v(" "),n("p",[t._v("【注意】throw语句后不能跟其他代码，否则永远执行不到，编译错误")])]),t._v(" "),n("li",[n("p",[n("code",[t._v("throws")]),t._v("：在"),n("strong",[t._v("方法声明上")]),t._v("，这个异常不一定会产生，是一种"),n("strong",[t._v("可能性")])])])])])]),t._v(" "),n("h2",{attrs:{id:"try-finally-return-问题"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#try-finally-return-问题","aria-hidden":"true"}},[t._v("#")]),t._v(" try...finally return 问题")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("fin")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("finally")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("40")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//最终返回40。这里若修改为return 4，最终就返回4")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 若没有return a;这行代码，则无论a怎么变化，还是会返回10；")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("【注意】如果"),n("strong",[t._v("finally有return语句")]),t._v("，将"),n("strong",[t._v("覆盖")]),t._v("原始的返回值，永远返回finally中的值。一般应避免该情况")]),t._v(" "),n("h2",{attrs:{id:"final-finally-finallize-区别"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#final-finally-finallize-区别","aria-hidden":"true"}},[t._v("#")]),t._v(" final finally finallize 区别")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("final")]),t._v("：最终意思，可以修饰类、成员变量、成员方法。")]),t._v(" "),n("li",[n("code",[t._v("finally")]),t._v("：异常处理，用于释放资源，finally中的代码一定会被执行，除非：\n"),n("ul",[n("li",[t._v("执行之前jvm退出"),n("code",[t._v("System.exit(0)")]),t._v("；finally中发生异常；程序所在线程死亡；关闭CPU；")])])]),t._v(" "),n("li",[n("code",[t._v("finalize")]),t._v("：Object类的一个方法，用于"),n("strong",[t._v("垃圾回收")])])]),t._v(" "),n("h2",{attrs:{id:"java-io流有几种？抽象类有什么？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#java-io流有几种？抽象类有什么？","aria-hidden":"true"}},[t._v("#")]),t._v(" Java IO流有几种？抽象类有什么？")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("字节流：InputStream、OutputStream")])]),t._v(" "),n("li",[n("p",[t._v("字符流：Reader、Writer")]),t._v(" "),n("p",[t._v("转换流的InputStreamReader、OutputStreamWriter也是字符流，唯一可以指定字符集的流！")])])]),t._v(" "),n("h2",{attrs:{id:"什么是java-序列化，如何实现？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#什么是java-序列化，如何实现？","aria-hidden":"true"}},[t._v("#")]),t._v(" 什么是java 序列化，如何实现？")]),t._v(" "),n("ul",[n("li",[t._v("把"),n("strong",[t._v("Java对象保存为二进制字节码")]),t._v("的过程，可用于传输。反序列化相反。")]),t._v(" "),n("li",[t._v("可以使用ObjectOutputStream的writeObject来实现；或让被传输的对象"),n("strong",[t._v("实现 serializable 标记接口")]),t._v("，编译时就会特殊处理")]),t._v(" "),n("li",[t._v("若类中有不想被序列化的字段，使用"),n("code",[t._v("transient")]),t._v("关键字修饰即可")])]),t._v(" "),n("h2",{attrs:{id:"能不能自己写个类，也叫java-lang-string？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#能不能自己写个类，也叫java-lang-string？","aria-hidden":"true"}},[t._v("#")]),t._v(" 能不能自己写个类，也叫java.lang.String？")]),t._v(" "),n("p",[t._v("可以，但是在使用的时候必须用自己的类加载器来加载，否则系统的类加载器只会加载jre.jar包中的String类。")]),t._v(" "),n("p",[t._v("在 Tomcat 的 web 应用，都是由 webapp 自己的类加载器先自己加载 WEB-INF/classess 目录中的类，若在这里面写了String 类，Servlet程序加载的就是自己写的String 类。")]),t._v(" "),n("h2",{attrs:{id:"math-round-11-5-11"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#math-round-11-5-11","aria-hidden":"true"}},[t._v("#")]),t._v(" Math.round(-11.5) = -11")]),t._v(" "),n("p",[t._v("算法为Math.floor(x+0.5)：为向下取"),n("strong",[t._v("小")]),t._v("，并取整")]),t._v(" "),n("h2",{attrs:{id:"_4-10-1-4"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-10-1-4","aria-hidden":"true"}},[t._v("#")]),t._v(" 4&10>>1=4")]),t._v(" "),n("p",[t._v("值为4，>>优先级高")]),t._v(" "),n("h2",{attrs:{id:"jvm-如何加载类？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#jvm-如何加载类？","aria-hidden":"true"}},[t._v("#")]),t._v(" JVM 如何加载类？")]),t._v(" "),n("p",[t._v("程序在运行期JVM通过"),n("strong",[t._v("加载、连接、初始化")]),t._v("来加载类：")]),t._v(" "),n("ul",[n("li",[n("p",[n("strong",[t._v("加载")]),t._v("：JVM"),n("strong",[t._v("获取类的二进制字节流，将其数据放入方法区，并生成Class对象放入堆中")]),t._v("。")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("Bootstrap ClassLoader（引导类加载器）：由C实现，在Java中没有对象，为null。负责加载存放在 "),n("code",[t._v("JDK\\jre\\lib")]),t._v("的类")])]),t._v(" "),n("li",[n("p",[t._v("ExtensionClassLoader（扩展类加载器）：负责加载 "),n("code",[t._v("JDK\\jre\\lib\\ext")]),t._v("目录中的类")])]),t._v(" "),n("li",[n("p",[t._v("Application ClassLoader（应用类加载器）：负责加载用户类路径（ClassPath）所指定的类")]),t._v(" "),n("p",[n("strong",[t._v("双亲委派模型")]),t._v("：若一个类加载器收到了类加载的请求，它首先把请求委托给父加载器去完成，父类完成不了再传给子类")])])])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("连接")]),t._v("：")]),t._v(" "),n("ul",[n("li",[n("strong",[t._v("验证")]),t._v("：确保被加载类符合虚拟机要求")]),t._v(" "),n("li",[n("strong",[t._v("准备")]),t._v("：为类的静态变量分配内存，隐式初始化。")]),t._v(" "),n("li",[n("strong",[t._v("解析")]),t._v("（也可能在初始化后开始，为了支持Java运行时绑定）：把类中符号引用替换为直接引用")])])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("初始化")]),t._v("：对类初始化")])]),t._v(" "),n("li",[n("p",[t._v("使用：")])]),t._v(" "),n("li",[n("p",[t._v("卸载：")])])]),t._v(" "),n("h2",{attrs:{id:"jvm-内存结构？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#jvm-内存结构？","aria-hidden":"true"}},[t._v("#")]),t._v(" JVM 内存结构？")]),t._v(" "),n("ul",[n("li",[n("strong",[t._v("方法区")]),t._v("（线程共享区域，Java8使用元空间（meta space）来实现）：存储已被JVM加载的"),n("strong",[t._v("Class数据信息")])]),t._v(" "),n("li",[n("strong",[t._v("堆")]),t._v("（线程共享区域）："),n("strong",[t._v("存放对象实例")]),t._v("（不绝对），分为新生代、老年代等，为了方便GC。")]),t._v(" "),n("li",[n("strong",[t._v("栈")]),t._v("（线程私有）："),n("strong",[t._v("每个方法执行时创建栈帧，存储局部变量")]),t._v("等信息")]),t._v(" "),n("li",[n("strong",[t._v("本地方法栈")]),t._v("（线程私有）：操作系统相关方法")]),t._v(" "),n("li",[n("strong",[t._v("PC计数器")]),t._v("（线程私有）：指向当前线程执行的"),n("strong",[t._v("字节码指令地址")])])]),t._v(" "),n("h2",{attrs:{id:"jvm-调优"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#jvm-调优","aria-hidden":"true"}},[t._v("#")]),t._v(" JVM 调优")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("OutOfMemoryError")]),t._v("系统内存被占满，：unable to create new native thread，操作系统没有足够的资源来产生这个线程造成的。当系统内存固定时，分配给 Java 虚拟机的内存越多，那么，系统总共能够产生的线程也就越少，两者成反比的关系。修改"),n("code",[t._v("-Xss")]),t._v("来减少分配给单个线程的空间，也可以增加系统总共内生产的线程数。")]),t._v(" "),n("li",[n("code",[t._v("StackOverflowError")]),t._v("堆栈溢出，：递归没返回，或者循环调用造成")]),t._v(" "),n("li",[t._v("内存泄漏检查：系统资源（各方面的资源，堆、栈、线程等）在错误使用的情况下，导致使用完毕的资源无法回收（或没有回收），从而导致新的资源分配请求无法完成，引起系统错误。根据垃圾回收前后情况对比，同时根据对象引用情况（常见的集合对象引用）分析，基本都可以找到泄漏点。")]),t._v(" "),n("li",[t._v("线程堆栈满：一个线程的空间大小是有限制的（1M），增加线程栈大小。"),n("code",[t._v("-Xss2m")]),t._v("，查看代码是否有造成泄露部分")])]),t._v(" "),n("h2",{attrs:{id:"jvm-垃圾处理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#jvm-垃圾处理","aria-hidden":"true"}},[t._v("#")]),t._v(" JVM 垃圾处理")]),t._v(" "),n("h2",{attrs:{id:"面向对象七大设计原则"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#面向对象七大设计原则","aria-hidden":"true"}},[t._v("#")]),t._v(" 面向对象七大设计原则")]),t._v(" "),n("ul",[n("li",[n("strong",[t._v("开")]),t._v("：开闭原则。一个软件实体应当对扩展开发，对修改关闭")]),t._v(" "),n("li",[n("strong",[t._v("口")]),t._v("：接口隔离原则。使用多个专门的接口比使用单一的总接口要好")]),t._v(" "),n("li",[n("strong",[t._v("合")]),t._v("：组合/聚合复用原则。要尽量使用合成/聚合，尽量不要使用继承")]),t._v(" "),n("li",[n("strong",[t._v("里")]),t._v("：里式替换原则。所有引用基类的地方必须可以使用其子类的对象替代")]),t._v(" "),n("li",[n("strong",[t._v("最")]),t._v("：最少知识原则（迪米特法则）。一个对象应当对其他对象有尽可能少的了解")]),t._v(" "),n("li",[n("strong",[t._v("单")]),t._v("：单一职责原则。把多于的职责分离出去，分别再创建一些类来完成每一个职责")]),t._v(" "),n("li",[n("strong",[t._v("依")]),t._v("：依赖倒置原则。实现类依赖接口或抽象类，减少类间的耦合性，提高系统的稳定")])]),t._v(" "),n("h2",{attrs:{id:"设计模式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#设计模式","aria-hidden":"true"}},[t._v("#")]),t._v(" 设计模式")]),t._v(" "),n("ul",[n("li",[t._v("创建型模式，共五种：抽象工厂模式、"),n("strong",[t._v("工厂方法模式")]),t._v("、"),n("strong",[t._v("单例模式")]),t._v("、建造者模式、原型模式。")]),t._v(" "),n("li",[t._v("结构型模式，共七种："),n("strong",[t._v("适配器模式")]),t._v("、"),n("strong",[t._v("装饰器模式")]),t._v("、"),n("strong",[t._v("代理模式")]),t._v("、外观模式、桥接模式、组合模式、享元模式。")]),t._v(" "),n("li",[t._v("行为型模式，共十一种：策略模式、模板方法模式、观察者模式、迭代子模式、责任链模式、命令模式、备忘录模式、状态模式、访问者模式、中介者模式、解释器模式。")])]),t._v(" "),n("h2",{attrs:{id:"工厂方法模式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#工厂方法模式","aria-hidden":"true"}},[t._v("#")]),t._v(" 工厂方法模式")]),t._v(" "),n("p",[t._v("定义一个"),n("strong",[t._v("创建对象的接口")]),t._v("，让其"),n("strong",[t._v("子类自己决定实例化哪一个工厂类")]),t._v("，工厂模式使其创建过程延迟到子类进行")]),t._v(" "),n("p",[t._v("如果有新的对象增加，只需要增加一个"),n("strong",[t._v("具体的类")]),t._v("和"),n("strong",[t._v("具体的工厂类")]),t._v("即可")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("abstract")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Animal")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("abstract")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("eat")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Dog")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Animal")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("eat")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"狗吃肉"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Factory")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("abstract")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Animal")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("creatAnimal")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DogFactory")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Factory")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Animal")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("creatAnimal")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Dog")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Factory")]),t._v(" f "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DogFactory")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Animal")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" f"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("creatAnimal")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\ta"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("eat")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h2",{attrs:{id:"单例模式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#单例模式","aria-hidden":"true"}},[t._v("#")]),t._v(" 单例模式")]),t._v(" "),n("p",[t._v("饿汉式")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("   \n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  \n    \n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleto1")]),t._v(" single "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n    \n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getInstance")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" single"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("懒汉式")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("   \n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  \n    \n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),t._v(" single "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n    \n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*synchronized*/")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getInstance")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("single "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            single "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" single"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("线程安全的，内部类")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Inner")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),t._v(" s "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getInstance")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Inner")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h2",{attrs:{id:"装饰者模式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#装饰者模式","aria-hidden":"true"}},[t._v("#")]),t._v(" 装饰者模式")]),t._v(" "),n("p",[n("strong",[t._v("动态地给一个对象添加一些额外的职责")]),t._v("，同时又不改变其结构。就增加功能来说，装饰者模式相"),n("strong",[t._v("比生成子类更为灵活")]),t._v("。")]),t._v(" "),n("p",[t._v("如IO流"),n("code",[t._v("BufferedReader br = new BufferedReader(new InputStreamReader(System.in))")])]),t._v(" "),n("h2",{attrs:{id:"日期时间处理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#日期时间处理","aria-hidden":"true"}},[t._v("#")]),t._v(" 日期时间处理")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("获取当前年月日时分秒")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LocalDateTime")]),t._v(" dt "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LocalDateTime")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getYear")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getMonthValue")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1 - 12，比Calendar强太多了")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getDayOfMonth")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getHour")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getMinute")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSecond")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),n("li",[n("p",[t._v("从1970 年1 月1 日0 时0 分0 秒到现在的毫秒数")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("currentTimeMillis")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Clock")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("systemDefaultZone")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("millis")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getTime")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),n("li",[n("p",[t._v("取得某月的最开始/后一天")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LocalDate")]),t._v(" now "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LocalDate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LocalDate")]),t._v(" fisrtDay "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" now"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TemporalAdjusters")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("firstDayOfMonth")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LocalDate")]),t._v(" lastDay "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" now"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TemporalAdjusters")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("lastDayOfMonth")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),n("li",[n("p",[t._v("格式化日期（比8之前需要Formatter类来调用方法强多了）")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DateTimeFormatter")]),t._v(" formatter "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DateTimeFormatter")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ofPattern")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"yyyy-MM-dd HH:mm:ss"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LocalDateTime")]),t._v(" localDateTime "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LocalDateTime")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2019-04-03T10:32:12.172")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" format "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" localDateTime"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("format")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("formatter"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2019-04-03 10:32:12")]),t._v("\n")])])])]),t._v(" "),n("li",[n("p",[t._v("昨天/明天的当前时刻（日期、时分秒等同理）")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LocalDateTime")]),t._v(" now "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LocalDateTime")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LocalDateTime")]),t._v(" yesterday "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" now"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("minusDays")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2019-04-02T10:36:45.197")]),t._v("\n")])])])]),t._v(" "),n("li",[n("p",[t._v("生日")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MonthDay")]),t._v(" birthday "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MonthDay")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("of")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MonthDay")]),t._v(" now "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MonthDay")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("from")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LocalDateTime")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//LocalDate也可以")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("now"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("equals")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("birthday"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])]),t._v(" "),n("br"),t._v(" "),n("br"),t._v(" "),n("br"),t._v(" "),n("Valine")],1)},[],!1,null,null,null);s.default=r.exports}}]);